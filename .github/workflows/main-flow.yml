name: Build and Deliver Containers

on: push

jobs:
  userservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver user-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test, and package project
        working-directory: ./UserService
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/user-service:latest ./UserService

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/user-service:latest

  recipeservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver recipe-service container
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: abc123
          MYSQL_DATABASE: recipe_platform_db
        ports:
          - 3307:3306

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -P 3307 --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Build, test, and package project
        working-directory: ./RecipeService
        run: mvn package -B

  commentservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver comment-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test, and package project
        working-directory: ./CommentService
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/comment-service:latest ./CommentService

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/comment-service:latest

  apigateway:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver api-gateway container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test, and package project
        working-directory: ./Api-gateway
        run: mvn package

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build --build-arg GOOGLE_CLIENTID=${{ secrets.GOOGLE_CLIENTID }} --build-arg GOOGLE_CLIENTSECRET=${{ secrets.GOOGLE_CLIENTSECRET }} -t ${{ secrets.DOCKER_USER }}/api-gateway:latest ./Api-gateway

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/api-gateway:latest
